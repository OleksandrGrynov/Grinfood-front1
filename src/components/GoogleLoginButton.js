import React from 'react';
import { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';

const GoogleLoginButton = ({ onSuccess, setError }) => {
    const handleGoogleSignIn = async () => {
        try {
            const auth = getAuth();
            const provider = new GoogleAuthProvider();
            const result = await signInWithPopup(auth, provider);
            const idToken = await result.user.getIdToken();

            // üõë –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞: —á–∏ —ñ—Å–Ω—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É Firestore
            const checkRes = await fetch(`${process.env.REACT_APP_API_URL}/check-user-exists`, {
                headers: {
                    Authorization: `Bearer ${idToken}`
                }
            });

            if (!checkRes.ok) {
                throw new Error('–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø–æ—á–∞—Ç–∫—É –∑–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ email.');
            }

            localStorage.setItem('token', idToken);

            const roleRes = await fetch(`${process.env.REACT_APP_API_URL}/get-role`, {
                headers: { Authorization: `Bearer ${idToken}` },
            });

            const role = (await roleRes.json()).role || 'user';
            localStorage.setItem('role', role);

            onSuccess?.();
        } catch (error) {
            console.error('‚ùå Google Sign-In error:', error.message);
            setError?.(error.message);
        }
    };

    return <button onClick={handleGoogleSignIn}>üîê –£–≤—ñ–π—Ç–∏ —á–µ—Ä–µ–∑ Google</button>;
};

export default GoogleLoginButton;
