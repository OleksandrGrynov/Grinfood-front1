import React, { useState, useEffect } from 'react';
import { getAuth, confirmPasswordReset } from 'firebase/auth';
import { useSearchParams, useNavigate } from 'react-router-dom';
import './styles/ResetPasswordPage.scss';

const ResetPasswordPage = () => {
    const [searchParams] = useSearchParams();
    const navigate = useNavigate();

    const oobCode = searchParams.get('oobCode');
    const [newPassword, setNewPassword] = useState('');
    const [confirmPassword, setConfirmPassword] = useState('');
    const [error, setError] = useState('');
    const [success, setSuccess] = useState(false);

    useEffect(() => {
        if (!oobCode) {
            setError('–ù–µ–¥—ñ–π—Å–Ω–µ –∞–±–æ –≤—ñ–¥—Å—É—Ç–Ω—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è.');
        }
    }, [oobCode]);

    const handleSubmit = async (e) => {
        e.preventDefault();
        setError('');

        if (newPassword.length < 6) {
            return setError('–ü–∞—Ä–æ–ª—å –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ —â–æ–Ω–∞–π–º–µ–Ω—à–µ 6 —Å–∏–º–≤–æ–ª—ñ–≤.');
        }

        if (newPassword !== confirmPassword) {
            return setError('–ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å.');
        }

        try {
            const auth = getAuth();
            await confirmPasswordReset(auth, oobCode, newPassword);
            setSuccess(true);
            setTimeout(() => navigate('/'), 3000);
        } catch (err) {
            console.error('‚ùå Error resetting password:', err);
            setError('–ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å. –ü–æ—Å–∏–ª–∞–Ω–Ω—è –º–æ–∂–ª–∏–≤–æ –Ω–µ–¥—ñ–π—Å–Ω–µ –∞–±–æ –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–µ.');
        }
    };

    return (
        <div className="reset-password-container">
            <h2>üîê –°–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è</h2>
            {error && <p className="error-text">‚ùå {error}</p>}
            {success ? (
                <p className="success-text">‚úÖ –ü–∞—Ä–æ–ª—å —É—Å–ø—ñ—à–Ω–æ –∑–º—ñ–Ω–µ–Ω–æ! –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü—ñ—è...</p>
            ) : (
                <form onSubmit={handleSubmit}>
                    <input
                        type="password"
                        placeholder="–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å"
                        value={newPassword}
                        onChange={(e) => setNewPassword(e.target.value)}
                        required
                    />
                    <input
                        type="password"
                        placeholder="–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è"
                        value={confirmPassword}
                        onChange={(e) => setConfirmPassword(e.target.value)}
                        required
                    />
                    <button type="submit">–°–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å</button>
                </form>
            )}
        </div>
    );
};

export default ResetPasswordPage;
